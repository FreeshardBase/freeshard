name: Release
run-name: Release ${{ github.event.release.tag_name }}

on:
  release:
    types: [created]
  push:
    branches:
      - feature/workflow

jobs:
  test:
    uses: ./.github/workflows/test.yml
    with:
      full: false

  prepare:
    runs-on: ubuntu-latest
    needs: test
    outputs:
      shard_core_docker_tag: ${{ steps.Output.outputs.SHARD_CORE_DOCKER_TAG }}
    steps:
      - name: Inject enhanced GitHub environment variables
        uses: rlespinasse/github-slug-action@v5
      - name: Output
        # run: echo "ghcr.io/${{ env.GITHUB_REPOSITORY_OWNER_PART_SLUG }}/${{ env.GITHUB_REPOSITORY_NAME_PART_SLUG }}:${{ github.event.release.tag_name }}" >> "$GITHUB_OUTPUT"
        run: echo "SHARD_CORE_DOCKER_TAG=ghcr.io/${{ env.GITHUB_REPOSITORY_OWNER_PART_SLUG }}/${{ env.GITHUB_REPOSITORY_NAME_PART_SLUG }}:${{ env.GITHUB_REF_NAME_SLUG }}" >> "$GITHUB_OUTPUT"

  build:
    runs-on: ubuntu-latest
    container: ghcr.io/freeshardbase/cicd-image:1.0.3
    needs: prepare
    permissions:
      packages: write
    steps:
      - run: echo ${{ needs.prepare.outputs.shard_core_docker_tag }}
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ needs.prepare.outputs.shard_core_docker_tag }}

  pages:
    runs-on: ubuntu-latest
    needs:
      - prepare
      - build
    services:
      shard_core:
        image: ${{ needs.prepare.outputs.shard_core_docker_tag }}
        ports:
          - 8000
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Generate API Documentation
        run: npx @redocly/cli build-docs -o public/index.html http://localhost:${{ job.services.shard_core.port['8000'] }}/openapi.json
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public

  json-schema:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install ".[dev]"
      - name: Generate JSON Schema
        run: |
          source venv/bin/activate
          python -m shard_core.model.app_meta
      - name: Deploy JSON Schema to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./schemas
