image: docker:19.03.12

stages:
  - unittest
  - build
  - inttest
  - release

variables:
  IMAGE_TAG_REF: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  IMAGE_TAG_VERSION: $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
  POSTGRES_HOST_AUTH_METHOD: trust  # https://gitlab.com/gitlab-org/gitlab/-/issues/206944

unittest:
  stage: unittest
  image: python:latest
  script:
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip install ".[dev]"
    - cd tests
    - pytest
  services:
    - postgres:14
  variables:
    GCONF_SERVICES_POSTGRES_HOST: postgres
  tags:
    - portal

build:
  stage: build
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build --pull -t $IMAGE_TAG_REF .
    - docker push $IMAGE_TAG_REF
  tags:
    - portal

# todo: fix and enable
# integration-test:
#   stage: inttest
#   image: curlimages/curl:7.74.0
#   services:
#     - name: $IMAGE_TAG_REF
#       alias: ac
#     - name: registry.gitlab.com/ptl/identity_handler:develop
#       alias: identity_handler
#   script:
#     - curl -f ac/public/health

release-image:
  stage: release
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $IMAGE_TAG_REF
    - docker tag $IMAGE_TAG_REF $IMAGE_TAG_VERSION
    - docker push $IMAGE_TAG_VERSION
  rules:
    - if: $CI_COMMIT_TAG
  tags:
    - portal

pages:
  stage: release
  image: node:latest
  services:
    - name: $IMAGE_TAG_REF
      alias: portal_core
  script:
    - npm install -g redoc-cli
    - redoc-cli bundle -o public/index.html http://portal_core/openapi.json
  artifacts:
    paths:
      - public
  rules:
      - if: $CI_COMMIT_TAG
  tags:
    - portal
