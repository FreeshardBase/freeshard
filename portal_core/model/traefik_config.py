# generated by datamodel-codegen:
#   filename:  https://json.schemastore.org/traefik-v2.json
#   timestamp: 2022-04-23T08:28:46+00:00

from __future__ import annotations

from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Field, constr


class Global(BaseModel):
    checkNewVersion: Optional[bool] = None
    sendAnonymousUsage: Optional[bool] = None


class ForwardingTimeouts(BaseModel):
    dialTimeout: Optional[int] = None
    responseHeaderTimeout: Optional[int] = None
    idleConnTimeout: Optional[int] = None


class ServersTransport(BaseModel):
    insecureSkipVerify: Optional[bool] = None
    rootCAs: Optional[List[str]] = None
    maxIdleConnsPerHost: Optional[int] = None
    forwardingTimeouts: Optional[ForwardingTimeouts] = None


class Api(BaseModel):
    insecure: Optional[bool] = None
    dashboard: Optional[bool] = None
    debug: Optional[bool] = None


class Ping(BaseModel):
    entryPoint: Optional[str] = None
    manualRouting: Optional[bool] = None


class Log(BaseModel):
    level: Optional[str] = None
    filePath: Optional[str] = None
    format: Optional[str] = None


class Filters(BaseModel):
    statusCodes: Optional[List[str]] = None
    retryAttempts: Optional[bool] = None
    minDuration: Optional[int] = None


class Names(BaseModel):
    name0: Optional[str] = None
    name1: Optional[str] = None


class Names1(BaseModel):
    name0: Optional[str] = None
    name1: Optional[str] = None


class Headers(BaseModel):
    defaultMode: Optional[str] = None
    names: Optional[Names1] = None


class Fields(BaseModel):
    defaultMode: Optional[str] = None
    names: Optional[Names] = None
    headers: Optional[Headers] = None


class AccessLog(BaseModel):
    filePath: Optional[str] = None
    format: Optional[str] = None
    filters: Optional[Filters] = None
    fields: Optional[Fields] = None
    bufferingSize: Optional[int] = None


class HostResolver(BaseModel):
    cnameFlattening: Optional[bool] = None
    resolvConfig: Optional[str] = None
    resolvDepth: Optional[int] = None


class DnsChallenge(BaseModel):
    provider: Optional[str] = None
    delayBeforeCheck: Optional[int] = None
    resolvers: Optional[List[str]] = None
    disablePropagationCheck: Optional[bool] = None


class HttpChallenge(BaseModel):
    entryPoint: Optional[str] = None


class Acme(BaseModel):
    email: Optional[str] = None
    caServer: Optional[str] = None
    storage: Optional[str] = None
    keyType: Optional[str] = None
    dnsChallenge: Optional[DnsChallenge] = None
    httpChallenge: Optional[HttpChallenge] = None
    tlsChallenge: Optional[Dict[str, Any]] = None


class CertificatesResolvers(BaseModel):
    acme: Optional[Acme] = None


class LifeCycle(BaseModel):
    requestAcceptGraceTimeout: Optional[int] = None
    graceTimeOut: Optional[int] = None


class RespondingTimeouts(BaseModel):
    readTimeout: Optional[int] = None
    writeTimeout: Optional[int] = None
    idleTimeout: Optional[int] = None


class Transport(BaseModel):
    lifeCycle: Optional[LifeCycle] = None
    respondingTimeouts: Optional[RespondingTimeouts] = None


class ProxyProtocol(BaseModel):
    insecure: Optional[bool] = None
    trustedIPs: Optional[List[str]] = None


class ForwardedHeaders(BaseModel):
    insecure: Optional[bool] = None
    trustedIPs: Optional[List[str]] = None


class EntryPoint(BaseModel):
    to: Optional[str] = None
    scheme: Optional[str] = None
    permanent: Optional[bool] = None
    priority: Optional[int] = None


class Redirections(BaseModel):
    entryPoint: Optional[EntryPoint] = None


class Domain(BaseModel):
    main: Optional[str] = None
    sans: Optional[List[str]] = None


class Tls(BaseModel):
    options: Optional[str] = None
    certResolver: Optional[str] = None
    domains: Optional[List[Domain]] = None


class Http(BaseModel):
    redirections: Optional[Redirections] = None
    middlewares: Optional[List[str]] = None
    tls: Optional[Tls] = None


class Entrypoint(BaseModel):
    address: Optional[str] = None
    transport: Optional[Transport] = None
    proxyProtocol: Optional[ProxyProtocol] = None
    forwardedHeaders: Optional[ForwardedHeaders] = None
    http: Optional[Http] = None


class Tls1(BaseModel):
    ca: Optional[str] = None
    caOptional: Optional[bool] = None
    cert: Optional[str] = None
    key: Optional[str] = None
    insecureSkipVerify: Optional[bool] = None


class Basic(BaseModel):
    httpBasicAuthUser: Optional[str] = None
    httpBasicPassword: Optional[str] = None


class ProviderMarathon(BaseModel):
    constraints: Optional[str] = None
    trace: Optional[bool] = None
    watch: Optional[bool] = None
    endpoint: Optional[str] = None
    defaultRule: Optional[str] = None
    exposedByDefault: Optional[bool] = None
    dcosToken: Optional[str] = None
    tls: Optional[Tls1] = None
    dialerTimeout: Optional[int] = None
    responseHeaderTimeout: Optional[int] = None
    tlsHandshakeTimeout: Optional[int] = None
    keepAlive: Optional[int] = None
    forceTaskHostname: Optional[bool] = None
    basic: Optional[Basic] = None
    respectReadinessChecks: Optional[bool] = None


class ProviderFile(BaseModel):
    directory: Optional[str] = None
    watch: Optional[bool] = None
    filename: Optional[str] = None
    debugLogGeneratedTemplate: Optional[bool] = None


class Tls2(BaseModel):
    ca: Optional[str] = None
    caOptional: Optional[bool] = None
    cert: Optional[str] = None
    key: Optional[str] = None
    insecureSkipVerify: Optional[bool] = None


class ProviderDocker(BaseModel):
    constraints: Optional[str] = None
    watch: Optional[bool] = None
    endpoint: Optional[str] = None
    defaultRule: Optional[str] = None
    tls: Optional[Tls2] = None
    exposedByDefault: Optional[bool] = None
    useBindPortIP: Optional[bool] = None
    swarmMode: Optional[bool] = None
    network: Optional[str] = None
    swarmModeRefreshSeconds: Optional[int] = None


class ProviderKubernetesCrd(BaseModel):
    endpoint: Optional[str] = None
    token: Optional[str] = None
    certAuthFilePath: Optional[str] = None
    disablePassHostHeaders: Optional[bool] = None
    namespaces: Optional[List[str]] = None
    labelSelector: Optional[str] = None
    ingressClass: Optional[str] = None
    throttleDuration: Optional[str] = None


class IngressEndpoint(BaseModel):
    ip: Optional[str] = None
    hostname: Optional[str] = None
    publishedService: Optional[str] = None


class ProviderKubernetesIngress(BaseModel):
    endpoint: Optional[str] = None
    token: Optional[str] = None
    certAuthFilePath: Optional[str] = None
    disablePassHostHeaders: Optional[bool] = None
    namespaces: Optional[List[str]] = None
    labelSelector: Optional[str] = None
    ingressClass: Optional[str] = None
    throttleDuration: Optional[str] = None
    ingressEndpoint: Optional[IngressEndpoint] = None


class ProviderRest(BaseModel):
    insecure: Optional[bool] = None


class ProviderRancher(BaseModel):
    constraints: Optional[str] = None
    watch: Optional[bool] = None
    defaultRule: Optional[str] = None
    exposedByDefault: Optional[bool] = None
    enableServiceHealthFilter: Optional[bool] = None
    refreshSeconds: Optional[int] = None
    intervalPoll: Optional[bool] = None
    prefix: Optional[str] = None


class Tls3(BaseModel):
    ca: Optional[str] = None
    caOptional: Optional[bool] = None
    cert: Optional[str] = None
    key: Optional[str] = None
    insecureSkipVerify: Optional[bool] = None


class HttpAuth(BaseModel):
    username: Optional[str] = None
    password: Optional[str] = None


class Endpoint(BaseModel):
    address: Optional[str] = None
    scheme: Optional[str] = None
    datacenter: Optional[str] = None
    token: Optional[str] = None
    endpointWaitTime: Optional[str] = None
    tls: Optional[Tls3] = None
    httpAuth: Optional[HttpAuth] = None


class ProviderConsulCatalog(BaseModel):
    constraints: Optional[str] = None
    prefix: Optional[str] = None
    refreshInterval: Optional[str] = None
    requireConsistent: Optional[bool] = None
    stale: Optional[bool] = None
    cache: Optional[bool] = None
    exposedByDefault: Optional[bool] = None
    defaultRule: Optional[str] = None
    endpoint: Optional[Endpoint] = None


class Tls4(BaseModel):
    ca: Optional[str] = None
    caOptional: Optional[bool] = None
    cert: Optional[str] = None
    key: Optional[str] = None
    insecureSkipVerify: Optional[bool] = None


class ProviderConsul(BaseModel):
    rootKey: Optional[str] = None
    endpoints: Optional[List[str]] = None
    username: Optional[str] = None
    password: Optional[str] = None
    tls: Optional[Tls4] = None


class Tls5(BaseModel):
    ca: Optional[str] = None
    caOptional: Optional[bool] = None
    cert: Optional[str] = None
    key: Optional[str] = None
    insecureSkipVerify: Optional[bool] = None


class ProviderEtcd(BaseModel):
    rootKey: Optional[str] = None
    endpoints: Optional[List[str]] = None
    username: Optional[str] = None
    password: Optional[str] = None
    tls: Optional[Tls5] = None


class Tls6(BaseModel):
    ca: Optional[str] = None
    caOptional: Optional[bool] = None
    cert: Optional[str] = None
    key: Optional[str] = None
    insecureSkipVerify: Optional[bool] = None


class ProviderZookeeper(BaseModel):
    rootKey: Optional[str] = None
    endpoints: Optional[List[str]] = None
    username: Optional[str] = None
    password: Optional[str] = None
    tls: Optional[Tls6] = None


class Tls7(BaseModel):
    ca: Optional[str] = None
    caOptional: Optional[bool] = None
    cert: Optional[str] = None
    key: Optional[str] = None
    insecureSkipVerify: Optional[bool] = None


class ProviderRedis(BaseModel):
    rootKey: Optional[str] = None
    endpoints: Optional[List[str]] = None
    username: Optional[str] = None
    password: Optional[str] = None
    tls: Optional[Tls7] = None


class MetricStatsd(BaseModel):
    address: Optional[str] = None
    pushInterval: Optional[int] = None
    addEntryPointsLabels: Optional[bool] = None
    addServicesLabels: Optional[bool] = None
    prefix: Optional[str] = None


class MetricPrometheus(BaseModel):
    buckets: Optional[List[int]] = None
    addEntryPointsLabels: Optional[bool] = None
    addServicesLabels: Optional[bool] = None
    entryPoint: Optional[str] = None
    manualRouting: Optional[bool] = None


class MetricDatadog(BaseModel):
    address: Optional[str] = None
    pushInterval: Optional[int] = None
    addEntryPointsLabels: Optional[bool] = None
    addServicesLabels: Optional[bool] = None


class MetricInfluxdb(BaseModel):
    address: Optional[str] = None
    protocol: Optional[str] = None
    pushInterval: Optional[int] = None
    database: Optional[str] = None
    retentionPolicy: Optional[str] = None
    username: Optional[str] = None
    password: Optional[str] = None
    addEntryPointsLabels: Optional[bool] = None
    addServicesLabels: Optional[bool] = None


class Collector(BaseModel):
    endpoint: Optional[str] = None
    user: Optional[str] = None
    password: Optional[str] = None


class TracingJaeger(BaseModel):
    samplingServerURL: Optional[str] = None
    samplingType: Optional[str] = None
    samplingParam: Optional[int] = None
    localAgentHostPort: Optional[str] = None
    gen128Bit: Optional[bool] = None
    propagation: Optional[str] = None
    traceContextHeaderName: Optional[str] = None
    collector: Optional[Collector] = None


class TracingZipkin(BaseModel):
    httpEndpoint: Optional[str] = None
    sameSpan: Optional[bool] = None
    id128Bit: Optional[bool] = None
    sampleRate: Optional[int] = None


class TracingDatadog(BaseModel):
    localAgentHostPort: Optional[str] = None
    globalTag: Optional[str] = None
    debug: Optional[bool] = None
    prioritySampling: Optional[bool] = None
    traceIDHeaderName: Optional[str] = None
    parentIDHeaderName: Optional[str] = None
    samplingPriorityHeaderName: Optional[str] = None
    bagagePrefixHeaderName: Optional[str] = None


class TracingInstana(BaseModel):
    localAgentHost: Optional[str] = None
    localAgentPort: Optional[int] = None
    logLevel: Optional[str] = None


class TracingHaystack(BaseModel):
    localAgentHost: Optional[str] = None
    localAgentPort: Optional[int] = None
    globalTag: Optional[str] = None
    traceIDHeaderName: Optional[str] = None
    parentIDHeaderName: Optional[str] = None
    spanIDHeaderName: Optional[str] = None
    baggagePrefixHeaderName: Optional[str] = None


class TracingElastic(BaseModel):
    serverURL: Optional[str] = None
    secretToken: Optional[str] = None
    serviceEnvironment: Optional[str] = None


class Providers(BaseModel):
    providersThrottleDuration: Optional[int] = None
    docker: Optional[ProviderDocker] = None
    file: Optional[ProviderFile] = None
    kubernetesIngress: Optional[ProviderKubernetesIngress] = None
    kubernetesCRD: Optional[ProviderKubernetesCrd] = None
    rest: Optional[ProviderRest] = None
    rancher: Optional[ProviderRancher] = None
    consulCatalog: Optional[ProviderConsulCatalog] = None
    consul: Optional[ProviderConsul] = None
    etcd: Optional[ProviderEtcd] = None
    zooKeeper: Optional[ProviderZookeeper] = None
    redis: Optional[ProviderRedis] = None


class Metrics(BaseModel):
    prometheus: Optional[MetricPrometheus] = None
    datadog: Optional[MetricDatadog] = None
    statsD: Optional[MetricStatsd] = None
    influxDB: Optional[MetricInfluxdb] = None


class Tracing(BaseModel):
    serviceName: Optional[str] = None
    spanNameLimit: Optional[int] = None
    jaeger: Optional[TracingJaeger] = None
    zipkin: Optional[TracingZipkin] = None
    datadog: Optional[TracingDatadog] = None
    instana: Optional[TracingInstana] = None
    haystack: Optional[TracingHaystack] = None
    elastic: Optional[TracingElastic] = None


class Model(BaseModel):
    global_: Optional[Global] = Field(None, alias='global')
    serversTransport: Optional[ServersTransport] = None
    entryPoints: Optional[Dict[constr(regex=r'[a-zA-Z0-9_-]'), Entrypoint]] = None
    providers: Optional[Providers] = None
    api: Optional[Api] = None
    metrics: Optional[Metrics] = None
    ping: Optional[Ping] = None
    log: Optional[Log] = None
    accessLog: Optional[AccessLog] = None
    tracing: Optional[Tracing] = None
    hostResolver: Optional[HostResolver] = None
    certificatesResolvers: Optional[
        Dict[constr(regex=r'[a-zA-Z]'), CertificatesResolvers]
    ] = None
