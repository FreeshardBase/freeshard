version: "3.5"

networks:
  portal:
    name: portal

services:
  {% for app in apps %}
  {{ app.name }}:
    image: {{ app.image }}
    container_name: {{ app.name }}
    restart: always

    {% if app.data_dirs %}
    volumes:
      {% for data_dir in app.data_dirs %}
      {% if data_dir is string %}
      - /home/portal/user_data/app_data/{{ app.name }}/{{ data_dir }}:{{ data_dir }}
      {% else %}
      - /home/portal/user_data/app_data/{{ app.name }}/{{ data_dir.path }}:{{ data_dir.path }}
      {% endif %}
      {% endfor %}
    {% endif %}

    {% if app.env_vars %}
    environment:
      {% for key, value in app.env_vars.items() %}
      - {{ key }}={{ value }}
      {% endfor %}
    {% endif %}

    networks:
      - portal
    labels:
      - traefik.enable=true
      - traefik.http.services.{{ app.name }}.loadbalancer.server.port={{ app.port }}
      - traefik.http.routers.{{ app.name }}_router.entrypoints=https
      - traefik.http.routers.{{ app.name }}_router.rule=Host(`{{ app.name }}.{{ portal.domain }}`)
      - traefik.http.routers.{{ app.name }}_router.tls=true
      - traefik.http.routers.{{ app.name }}_router.tls.certresolver=letsencrypt
      - traefik.http.routers.{{ app.name }}_router.tls.domains[0].main={{ portal.domain }}
      - traefik.http.routers.{{ app.name }}_router.tls.domains[0].sans=*.{{ portal.domain }}
      - traefik.http.routers.{{ app.name }}_router.middlewares=auth@file
      - traefik.http.routers.{{ app.name }}_router.service={{ app.name }}
  {% endfor %}